service: psrproj

provider:
  name: aws
  runtime: nodejs12.x
  stage: beta
  region: eu-west-1
  environment:
    tableName: ${self:custom.tableName}

plugins:
  # - aws-amplify-serverless-plugin
  - serverless-s3-sync

custom:
  stage: beta
  FileUploadBucketName: psr-user-file-bucket-19950723
  ReactAppBucketName: psr-proj-react-bucket-19950723
  tableName: ${self:custom.stage}-keys
  # amplify:
  #   - filename: src/aws-exports.js
  #     type: javascript
  #     appClient: CognitoUserPoolClient
  s3Sync:
    - bucketName: ${self:custom.ReactAppBucketName}
      localDir: build/

package:
  exclude:
    - amplify/**
    - public/**
    - src/**
    - node_modules/**

functions:
  hello:
    handler: handlers/handler.hello
    events:
      - http:
          path: /test
          method: any
          cors: true
          authorizer: aws_iam
  test:
    handler: handlers/test.test
    events:
      - http:
          path: /t1
          method: any
          cors: true
          authorizer: aws_iam
  afterFileUpload:
    handler: handlers/afterFileUpload.afterFileUpload
    events:
      - s3:
          bucket: ${self:custom.FileUploadBucketName}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpg
          existing: true
    # environment:
    #   REGION: ${self:provider.region}
  # resize:
  #   handler: handlers/register.register
  #   events:
  #     - http:
  #         path: /{size}/{image}
  #         method: get
  #   environment:
  #     BUCKET: ${self:custom.FileUploadBucketName}
  #     REGION: ${self:provider.region}
      # - s3:
      #     bucket: ${self:custom.FileUploadBucketName}
      #     event: s3:ObjectCreated:*
      #     rules:
      #       - suffix: .jpg
      #     existing: true

resources:
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  - ${file(resources/s3-bucket-userfile.yml)}
  - ${file(resources/s3-bucket-react.yml)}
  - ${file(resources/dynamodb.yml)}
